# https://itnext.io/packaging-and-scaling-fast-cgi-applications-in-docker-for-kubernetes-done-right-8440829fe1e9

# Nginx Config
kind: ConfigMap
apiVersion: v1
metadata:
  name: hello-wp-configs
data:
  default.conf: |
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen 80;
        listen [::]:80 default_server;
        server_name _;

        root /var/www/html;

        index index.php index.html index.htm;

        client_max_body_size 10M;

        # https://www.nginx.com/resources/wiki/start/topics/depth/ifisevil/#what-to-do-instead
        error_page 418 = @php_script;
        recursive_error_pages on;
        
        location / {
            try_files $uri $uri/ /index.php?$args;
        }

        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        location = /wp-config.php {
            deny all;
        }

        location ~ /wp-(content|includes)/.*\.(avi|gif|ico|jpe?g|mov|mp4|png|svg)$ {
            allow all;
            expires max;
            log_not_found off;
        }

        location ~ /wp-(content|includes)/.*\.(css|eot|js|otf|ttf|woff2?)$ {
            allow all;
            expires max;
            log_not_found off;
        }

        location ~ /wp-(content|includes)/.*\.(docx?|pdf|pptx?|xlsx?|xml|zip)$ {
            allow all;
            expires max;
            log_not_found off;
        }

        location = /wp-includes/js/tinymce/wp-tinymce.php {
            return 418;
        }

        location ~ /wp-(content|includes)/.*$ {
            deny all;
        }

        # Pass the PHP scripts to FastCGI server
        location ~ \.php$ {
            return 418;
        }

        location @php_script {
            # fastcgi_pass php.local:9000;
            # fastcgi_intercept_errors on;
            # include fastcgi.conf;

            # Prevent Zero-day exploit
            try_files $uri =404;

            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini

            # fastcgi_pass    unix:/var/run/php5-fpm.sock;
            fastcgi_pass    127.0.0.1:9000;
            fastcgi_index   index.php;
            # fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param   SCRIPT_FILENAME /usr/src/wordpress$fastcgi_script_name;
            include         fastcgi_params;
        }
    }
  wp-config.php: |
    <?php

    if ($_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https'){
        $_SERVER['HTTPS'] = 'on';
        $_SERVER['SERVER_PORT'] = 443;
    }

    $protocol = '';
    if (!$protocol) {
      $protocol = $_SERVER['REQUEST_SCHEME'];
    }

    // Force domain to the domain mounted on the docker image 
    define('WP_HOME', $protocol . '://' . $_SERVER['SERVER_NAME']);
    define('WP_SITEURL', $protocol . '://' . $_SERVER['SERVER_NAME']);

    // Disallow file editing
    define('DISALLOW_FILE_EDIT', true);

    // Disable all core updates:
    define('WP_AUTO_UPDATE_CORE', false);

    // ** MySQL settings - You can get this info from your web host ** //
    /** The name of the database for WordPress */
    define('DB_NAME', 'andreiruse_hyperliteratura');

    /** MySQL database username */
    define('DB_USER', 'andreiruse');

    /** MySQL database password */
    define('DB_PASSWORD', '80pHLHIk71CBa5u9CPqWPiFFs3ssj9');

    /** MySQL hostname */
    define('DB_HOST', 'tiamat.itmcd.ro:3306');

    /** Database Charset to use in creating database tables. */
    define('DB_CHARSET', 'utf8');

    /** The Database Collate type. Don't change this if in doubt. */
    define('DB_COLLATE', '');

    /**#@+
    * Authentication Unique Keys and Salts.
    *
    * Change these to different unique phrases!
    * You can generate these using the {@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service}
    * You can change these at any point in time to invalidate all existing cookies. This will force all users to have to log in again.
    *
    * @since 2.6.0
    */
    define('AUTH_KEY',         'Yg>DkhL5`+y8s8u&a&T^|B+p<W84`67wkEv4=JyfsvXdRAhW||++_(7[*lB#F]<c');
    define('SECURE_AUTH_KEY',  'du %og6EOxY|g9`G6@-cAnBxxzX(QZU7]W|eWF&AV}+s4bSQM733_cHH.OtB#}M*');
    define('LOGGED_IN_KEY',    'l!moumFk2eVxkEm,94[+(sx->kb=JABJ6ZNzKI#=B-eQa-Go*r(W|hv#Z1;M0LJ.');
    define('NONCE_KEY',        'N$Lpf3s(E_~$:p:T3/CrvGBH{hdS[kKJ[(~/L_y1+Pucnv:krjQ%nrZU#I;7D#Pv');
    define('AUTH_SALT',        'mV|2_}|R{Wa!^pu <jsBu42XqZ/Q<tZNS-aBz8F]Lr?T!l@Q$:GidJz(R;itAP=X');
    define('SECURE_AUTH_SALT', 'z/I%sxO-_#f%mX6{~D4WKw+hvl/4dlRB5j1O=+~sp$t}|1{gL-Shwp<~;SKi<]mJ');
    define('LOGGED_IN_SALT',   'M ;0aTb#G9c+~i]<#f@Pl-mY<Mo:|fz*8O7Z.4!_+k/$Smxos8RNm|_Y1sZeThzc');
    define('NONCE_SALT',       ']yz88];dx}z,+Ny: v(FWWAnFi3l|F,!a2|~;n_}++$cCBpoqg9T=&?J!FF8&o;Z');
    /**#@-*/

    /**
    * WordPress Database Table prefix.
    *
    * You can have multiple installations in one database if you give each
    * a unique prefix. Only numbers, letters, and underscores please!
    */
    $table_prefix  = 'wp_';

    /**
    * For developers: WordPress debugging mode.
    *
    * Change this to true to enable the display of notices during development.
    * It is strongly recommended that plugin and theme developers use WP_DEBUG
    * in their development environments.
    *
    * For information on other constants that can be used for debugging,
    * visit the Codex.
    *
    * @link https://codex.wordpress.org/Debugging_in_WordPress
    */
    define('WP_DEBUG', false);

    /* That's all, stop editing! Happy blogging. */

    /** Absolute path to the WordPress directory. */
    if ( !defined('ABSPATH') )
      define('ABSPATH', dirname(__FILE__) . '/');

    /** Sets up WordPress vars and included files. */
    require_once(ABSPATH . 'wp-settings.php');

    # Disable plugins automatic update
    add_filter( 'auto_update_plugin', '__return_false' );
    # Disable themes automatic update
    add_filter( 'auto_update_theme', '__return_false' );

    // Removing Wordpress Displaying Version
    remove_action('wp_head', 'wp_generator');

    // remove wp version param from any enqueued scripts
    function vc_remove_wp_ver_css_js($src) {
      if (strpos($src, 'ver=')) { // it is better to remove all ver query arguments
        //if (strpos($src, 'ver=' . get_bloginfo('version'))) {
            $src = remove_query_arg('ver', $src);
      }
        return $src;
    }
    add_filter('style_loader_src', 'vc_remove_wp_ver_css_js', 9999);
    add_filter('script_loader_src', 'vc_remove_wp_ver_css_js', 9999);

    ?>
---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-wp
  labels:
    app: production
    type: app
    service: hello-wp-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: production
      type: app
      service: hello-wp-service
  template:
    metadata:
      labels:
        app: production
        type: app
        service: hello-wp-service
    spec:
      containers:
        - image: wordpress:php7.2-fpm-alpine
          imagePullPolicy: IfNotPresent
          name: wordpress
          volumeMounts:
            - mountPath: /var/www/html
              name: hello-wp-shared-files
            - mountPath: /etc/wp
              name: hello-wp-configs
              readOnly: true
          # lifecycle:
          #   postStart:
          #     exec:
          #       command: ["/bin/sh", "-c", "cp -r /etc/wp/wp-config.php /var/www/html && chown www-data:www-data /var/www/html/wp-config.php"]
        - image: nginx:latest
          imagePullPolicy: Always
          name: nginx
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              name: hello-wp-configs
              readOnly: true
            - mountPath: /var/www/html
              name: hello-wp-shared-files
      volumes:
        - configMap:
            defaultMode: 256
            name: hello-wp-configs
            optional: false
          name: hello-wp-configs
        # Create the shared files volume to be used in both pods
        - emptyDir: {}
          name: hello-wp-shared-files

# ---
# # Pod
# apiVersion: v1
# kind: Pod
# metadata:
#   name: hello-wp
#   labels:
#     app: hello-wp
# spec:
#   volumes:
#   # Create the shared files volume to be used in both pods
#   - name: hello-wp-shared-files
#     emptyDir: {}
#   # Add the ConfigMap we declared above as a volume for the pod
#   - name: hello-wp-configs-volume
#     configMap:
#       name: hello-wp-configs
#   containers:
#   # Nginx Container
#   - name: nginx
#     image: nginx:latest
#     resources:
#       limits:
#         memory: "128Mi"
#         cpu: "500m"
#     # ports:
#     # - containerPort: 80
#     volumeMounts:
#     - name: hello-wp-shared-files
#       mountPath: /var/www/html
#     - name: hello-wp-configs-volume
#       mountPath: /etc/nginx/conf.d/default.conf
#       subPath: default.conf
#   # Wordpress Container
#   - name: wordpress
#     image: wordpress:php7.2-fpm-alpine
#     resources:
#       limits:
#         memory: "128Mi"
#         cpu: "500m"
#     # ports:
#     # - containerPort: 9000
#     volumeMounts:
#     - name: hello-wp-shared-files
#       mountPath: /var/www/html
#     lifecycle:
#       postStart:
#         exec:
#           command: ["/bin/sh", "-c", "cp -r /usr/src/wordpress/* /var/www/html"]

# ---
# # Service
# apiVersion: v1
# kind: Service
# metadata:
#   name: hello-wp-service
# spec:
#   selector:
#     app: hello-wp
#   ports:
#   - protocol: TCP
#     name: nginx
#     port: 80
#     targetPort: 80
#   # - protocol: TCP
#   #   name: php-fpm
#   #   port: 9000
# ---
# # Deployment
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: hello-wp-deployment
#   labels:
#     app: hello-wp
# spec:
#   # volumes:
#   # # Create the shared files volume to be used in both pods
#   # - name: hello-wp-shared-files
#   #   emptyDir: {}
#   # # Add the ConfigMap we declared above as a volume for the pod
#   # - name: hello-wp-configs-volume
#   #   configMap:
#   #     name: hello-wp-configs
#   replicas: 2
#   selector:
#     matchLabels:
#       app: hello-wp
#   template:
#     metadata:
#       labels:
#         app: hello-wp
#     spec:
#       containers:
#       # Nginx Container
#       - name: nginx
#         image: nginx:latest
#         resources:
#           limits:
#             memory: "128Mi"
#             cpu: "500m"
#         ports:
#         - containerPort: 80
#         # volumeMounts:
#         # - name: hello-wp-shared-files
#         #   mountPath: /var/www/html
#         # - name: hello-wp-configs-volume
#         #   mountPath: /etc/nginx/nginx.conf
#         #   subPath: nginx.conf
#       # Wordpress Container
#       - name: wordpress
#         image: wordpress:php7.2-fpm-alpine
#         resources:
#           limits:
#             memory: "128Mi"
#             cpu: "500m"
#         ports:
#         - containerPort: 9000
#         # volumeMounts:
#         # - name: hello-wp-shared-files
#         #   mountPath: /var/www/html
#         # lifecycle:
#         #   postStart:
#         #     exec:
#         #       command: ["/bin/sh", "-c", "cp -r /usr/src/wordpress/* /var/www/html"]